{# /src/CertificationBundle/Resources/views/Security/login.html.twig #}
{% extends '::base.html.twig' %}
{% block body %}
{% if error %}
    <div>{{ error.messageKey|trans(error.messageData, 'security') }}</div>
{% endif %}
<form action="{{ path('login') }}" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="_username" value="{{ last_username }}" />
    <label for="password">Password:</label>
    <input type="password" id="password" name="_password" />
    <input type="checkbox" id="remember_me" name="_remember_me" checked />
    <label for="remember_me">Keep me logged in</label>
    {#
    If you want to control the URL the user
    is redirected to on success (more details below)
    <input type="hidden" name="_target_path" value="/account" />
    #}
    <button type="submit">login</button>
</form>

{{ form_start(form) }}
{{ form_widget(form) }}
{{ form_end(form) }}

    {#% for owner in hwi_oauth_resource_owners() %}
        <a href="{{ hwi_oauth_login_url(owner) }}">{{ owner | trans({}, 'HWIOAuthBundle') }}</a> <br />
    {% endfor %#}

    <a href="{{ path('hwi_oauth_service_redirect', {'service': 'facebook' }) }}">
        <span>Facebook</span>
    </a>
    <fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
    </fb:login-button>

    {# Bonus: Show all available login link in HWIOAuthBundle #}
    {#% render(controller('HWIOAuthBundle:Connect:connect')) %#}

    <script>
        function statusChangeCallback(response) {
            if (response.status === 'connected') {
                document.location = "{{ url("hwi_oauth_service_redirect", {service: "facebook"}) }}";
            } else {
                FB.login(function(response) {
                    if (response.authResponse) {
                        document.location = "{{ url("hwi_oauth_service_redirect", {service: "facebook"}) }}";
                    } else {
                        alert('Cancelled.');
                    }
                }, {scope: 'email,public_profile'});
            }
        }

        function checkLoginState() {
            FB.getLoginStatus(function(response) {
                statusChangeCallback(response);
            });
        }

        window.fbAsyncInit = function() {
            // init the FB JS SDK
            FB.init({
                appId      : '{{ fb_client_id }}',                        // App ID from the app dashboard
                xfbml      : true,
                version    : 'v2.8'                              // Look for social plugins on the page
            });
            FB.getLoginStatus(function(response) {
                //statusChangeCallback(response);
            });
        };

        // Load the SDK asynchronously
        (function(d, s, id){
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) {return;}
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/fr_FR/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
    </script>
{% endblock %}