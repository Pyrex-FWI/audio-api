imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: services_dunglas_api.yml }
    - { resource: services_consumers.yml }
    #- { resource: "@AppBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    serializer:       { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  utf8mb4
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        default_entity_manager: default
        auto_generate_proxy_classes: "%kernel.debug%"
        resolve_target_entities:
            AudioCoreEntity\Entity\Media: AppBundle\Entity\Media
        entity_managers:
            default:
                auto_mapping: true
                mappings:
                    custom_mapping:
                        type: annotation
                        prefix: AudioCoreEntity\Entity\
                        dir: "%kernel.root_dir%/../vendor/pyrex-fwi/audio-core-entities/src/Entity/"
                        is_bundle: false

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }


deejay_pool:
    franchise_pool_audio:
        credentials:
            login:    %franchise_pool.credentials.login%
            password: %franchise_pool.credentials.password%
        configuration:
            root_path: %franchise_pool.configuration.root_path%

    smashvision:
    ddp:
        credentials:
            login:    %digital_dj_pool.credentials.login%
            password: %digital_dj_pool.credentials.password%
        configuration:
            root_path: %digital_dj_pool.configuration.root_path%

    smashvision:
        credentials:
            login:    %smashvision.credentials.login%
            password: %smashvision.credentials.password%
        configuration:
            root_path: %smashvision.configuration.root_path%

dunglas_api:
    title:       "Audio API"
    description: "Pyrex API"
    collection:
        pagination:
            items_per_page:
                number: 100

nelmio_api_doc:
    sandbox:
        accept_type:        "application/json"
        body_format:
            formats:        [ "json" ]
            default_format: "json"
        request_format:
            formats:
                json:       "application/json"

nelmio_cors:
    paths:
        '^/':
            allow_origin:  ["*"]
            allow_methods: ["OPTIONS", "POST", "PUT", "GET", "DELETE"]
            allow_headers: ['content-type']

lexik_jwt_authentication:
    private_key_path:    %kernel.root_dir%/var/jwt/private.pem   # ssh private key path
    public_key_path:     %kernel.root_dir%/var/jwt/public.pem    # ssh public key path
    pass_phrase:         xerypjd                                 # ssh key pass phrase
    token_ttl:           86400                                   # token ttl - defaults to 86400
    encoder_service:     lexik_jwt_authentication.jwt_encoder    # token encoder / decoder service - defaults to the jwt encoder (based on the namshi/jose library)
    user_identity_field: username                                # key under which the user identity will be stored in the token payload - defaults to username


old_sound_rabbit_mq:
    connections:
        default:
            host:     localhost
            port:     5672
            user:     guest
            password: guest
            vhost:    /
            lazy:     false
    producers:
        sapar_folder_move:
            connection: default
            exchange_options:
                name: 'sapar.folder.move'
                type: topic

        sapar_folder_remove:
            connection: default
            exchange_options:
                name: 'sapar.folder.remove'
                type: topic

        sapar_media_indexer:
            connection: default
            exchange_options:
                name: 'sapar.media.indexer'
                type: topic
    consumers:
        sapar_folder_move:
            connection: default
            exchange_options:
                name: 'sapar.folder.move'
                type: topic
            queue_options:
                name: 'sapar_folder_move_queue'
            callback: directory_move.consumer
            #idle_timeout: 60

        sapar_folder_remove:
            connection: default
            exchange_options:
                name: 'sapar.folder.remove'
                type: topic
            queue_options:
                name: 'sapar_folder_remove_queue'
            callback: directory_remove.consumer

        media_indexer:
            connection: default
            exchange_options:
                name: 'sapar.media.indexer'
                type: topic
            queue_options:
                name: 'sapar_folder_media_indexer'
            callback: media_indexer.consumer
